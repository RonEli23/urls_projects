name: Build and Deploy to AWS App Runner

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests targeting main branch

jobs:

  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      
    - name: Debug AWS Credentials
      run: | 
        echo "ddd=${{ secrets.ddd }}"
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

    - name: Checkout code
      uses: actions/checkout@v3  # Checkout your code from GitHub

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com
      
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com/url-project/express-web-server:latest . 
      
    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com/url-project/express-web-server:latest 

    - name: Deploy to AWS App Runner (example step)
      run: |
        aws apprunner update-service --service-arn arn:aws:apprunner:eu-north-1:${{ secrets.AWS_ACCOUNT_ID }}:service/my-first-aws-web-app --source-configuration ImageRepository={"ImageIdentifier":"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com/url-project/express-web-server:latest","ImageRepositoryType":"ECR"}
